name: Build Asteroids Game

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name Asteroids-Windows main.py
        
    - name: Build executable (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --windowed --name Asteroids-macOS main.py

    - name: Upload artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: Asteroids-Windows
        path: dist/Asteroids-Windows.exe

    - name: Upload artifacts (macOS)
      if: matrix.os == 'macos-latest' 
      uses: actions/upload-artifact@v3
      with:
        name: Asteroids-macOS
        path: dist/Asteroids-macOS

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Windows artifact
      uses: actions/download-artifact@v3
      with:
        name: Asteroids-Windows
        path: ./windows
    
    - name: Download macOS artifact
      uses: actions/download-artifact@v3
      with:
        name: Asteroids-macOS
        path: ./macos
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./windows/Asteroids-Windows.exe
          ./macos/Asteroids-macOS
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
